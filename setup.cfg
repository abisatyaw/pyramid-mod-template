[metadata]
name = {{cookiecutter.project_repo}}
summary = {{cookiecutter.project_short_description}}
author = {{cookiecutter.author_name}}
author_email = {{cookiecutter.author_email}}
keywords = web wsgi bfg pylons pyramid
license = none
url = https://{{cookiecutter.project_name}}.data.vanoord.com/
description_file = README.md

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifier =
    "Programming Language :: Python",
    "Framework :: Pyramid",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",

[options.entry_points]
paste.app_factory =
    main = {{cookiecutter.project_slug}}:main

console_scripts =
    {{cookiecutter.project_slug}}_initialize_db = {{cookiecutter.project_slug}}.scripts.initializedb:main

[options]
packages = find:
zip_safe = False  # https://mypy.readthedocs.io/en/latest/installed_packages.html
include_package_data = True
install_requires =
    pyramid-mod-baseview
    requests

setup_requires = setuptools_scm

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install .[testing]` 

# Add here test requirements (semicolon/line-separated)
testing =
    coverage-badge
    faker
    mypy
    pyramid_debugtoolbar
    pytest
    pytest-cov
    pytest-logging
    pytest-split
    ruff
    WebTest

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
    {{cookiecutter.project_slug}}
# data_files =
#    share/{{cookiecutter.project_slug}}_docs = docs/*

[extras]
# Add here additional requirements for extra features, like:
# PDF =
#    ReportLab>=1.2
#    RXP

[mypy]
ignore_missing_imports = True

[mypy-{{cookiecutter.project_slug}}]
allow_untyped_defs = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov={{cookiecutter.project_slug}} 
    --cov-config=setup.cfg
    --cov-context=test
    -W default
testpaths = tests
